handler{hPureSc} * handler{hAccumSc} * handler{hWeak} * do _ <- (op accum : Tunit -> Tunit "start " (y. Return y)
 in sc for : Tunit -> Tunit ["1","2","3","4","5"] (x. do eq2 <- (Eq (x) ("2")
 in 
if eq2
 then do _ <- (op accum : Tunit -> Tunit "!" (y. Return y)
 in do _ <- (op throw : Tunit -> Tunit "error" (y. Return y)
 in op accum : Tunit -> Tunit "unreachable" (y. Return y)))
 else op accum : Tunit -> Tunit x (y. Return y))) (x. Return x))

1.
{-- E-Hand and E-Hand and E-Hand and E-DoOp --}

handler{hPureSc} * handler{hAccumSc} * handler{hWeak} * op accum : Tunit -> Tunit "start " (y. do _ <- (Return y
 in sc for : Tunit -> Tunit ["1","2","3","4","5"] (x. do eq2 <- (Eq (x) ("2")
 in 
if eq2
 then do _ <- (op accum : Tunit -> Tunit "!" (y. Return y)
 in do _ <- (op throw : Tunit -> Tunit "error" (y. Return y)
 in op accum : Tunit -> Tunit "unreachable" (y. Return y)))
 else op accum : Tunit -> Tunit x (y. Return y))) (x. Return x)))

2.
{-- E-Hand and E-Hand and E-HandOp --}

handler{hPureSc} * handler{hAccumSc} * Return Left "start "

3.
{-- E-Hand and E-HandRet --}

handler{hPureSc} * Return ("", Left "start ")

4.
{-- E-HandRet --}

Return ("", Left "start ")

5.
{-- Nothing --}

