do _ <- op accum "start " (x. return x);
do _ <- map 1:2:3:4:5:[] (x. if x == 2
    then
    do _ <- op accum "!" (x.return x);
    do _ <- op throw "error" (x. return x);
    op accum "unreachable" (x. return x)
    else op accum x (x. return x)) ;
do _ <- op accum " end" (x. return x);
return "success"

hAccum = handler 
    {
        return x -> return ("", x)
        op accum m k -> do (m', v) <- k (); return (m ++ m', v)  
        red l k ->  do first <- map fst l;
                    do second <- map snd l;
                    do (m', b) <- k second;
                    let rec reduce = l.
                        do n <- null l;
                        if n
                            then 
                                return []
                            else
                                do h <- head l;
                                do t <- tail l;
                                do y <- reduce t;
                                return (h ++ y) in 
                                    do m <- reduce first;
                                    return (m ++ m', b)
        fwd f p k -> f (p, k) -- TODO
    }


hWeak = handler 
    {
        return x -> return (Right x)
        op throw m _ -> return (Left m)
        red l k ->  do res <- return l;
                    case firstFailure res of
                        Left err -> return (Left err)
                        Right t  -> k t
        fwd f p k -> f (p, k) -- TODO
    }

firstFailure lst = case map firstError lst of
    Just e  -> Left e
    Nothing -> Right $ fmap (\(Right x) -> x) lst 
  where firstError x = case x of Left e  -> Just e
                                 Right _ -> Nothing

-- TODO
hSeq = handler 
{
    return x -> return x
    map l p k -> do h <- head l;
                 do t <- tail l;
                 do resH <- p h;
                 do resT <- hSeq # map t p k;  
                 do res <- resH ++ resT;
                 k res
    fwd f p k -> -- TODO 
}

hSeq # hAccum # hWeak # (do _ <- op accum "start " (x. return x);
                        do _ <- map 1:2:3:4:5:[] (x. if x == 2
                            then
                            do _ <- op accum "!" (x.return x);
                            do _ <- op throw "error" (x. return x);
                            op accum "unreachable" (x. return x)
                            else op accum x (x. return x)) (x. return x);
                        do _ <- op accum " end" (x. return x) (x. return x);
                        return "success")
